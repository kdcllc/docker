version: '3.4'

# docker-compose -f "docker-compose.dev.yml" up -d --force-recreate --build

services:
  aspnetapp.frontend:
    image: aspnetapp.frontend
    build:
      context: .
      dockerfile: src/aspnetapp.frontend/Dockerfile.build
      args:
        # sdkImage: kdcllc/dotnet
        # sdkTag: 2.2-sdk
        # runtimeImage: mcr.microsoft.com/dotnet/core/aspnet
        # runtimeTag: 2.2
        # DOTNET_VERSION: netcore22
        # RUNTESTS: "true"
        # VERBOSE: "false"

        sdkImage: kdcllc/dotnet
        sdkTag: 3.0-sdk-bionic
        runtimeImage: mcr.microsoft.com/dotnet/core/aspnet
        runtimeTag: 3.0.0-rc1-bionic
        DOTNET_VERSION: netcore30
        RUNTESTS: "true"
        VERBOSE: "false"

    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=https://+:443;http://+:80
      - ASPNETCORE_HTTPS_PORT=6001

    volumes:
        # dotnet dev-certs https -ep %userprofile%\AppData\Roaming\ASP.NET\Https\aspnetapp.frontend.pfx -p 8c5d84b3-27c0-4964-a32b-91dd9b1c01d3
      - ${APPDATA}/ASP.NET/Https:/root/.aspnet/https:ro
      - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro
      - ${BUILD_ARTIFACTSTAGINGDIRECTORY:-./TestResults/}:/var/temp
    ports:
      - "6000:80"
      - "6001:443"
  aspnetapp.sqldb:
     image: microsoft/mssql-server-linux
     ports:
      - "5467:1433"
     environment:
      - SA_PASSWORD=Pass@word
      - ACCEPT_EULA=Y