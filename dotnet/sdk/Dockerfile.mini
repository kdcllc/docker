# ARG sdkTag=2.1
# ARG image=mcr.microsoft.com/dotnet/core/sdk
## https://hub.docker.com/_/microsoft-dotnet-core-sdk/

ARG sdkTag
ARG image

# Build image
FROM ${image}:${sdkTag} as builder
LABEL version="7.0" maintainer="kdcllc <info@kingdavidconsulting.com>"

# Child container input arguments
# netcore21, netcore22, netcore30
# <TargetFramework>$(NetCoreTargetVersion)</TargetFramework>
ONBUILD ARG DOTNET_VERSION="" 

# used for verbose restore.
ONBUILD ARG VERBOSE="false"

ONBUILD ARG NUGET_RESTORE="--disable-parallel"

# if PROJECT_PATH is present then only project is being restored and build.
ONBUILD ARG PROJECT_PATH 
ONBUILD ARG SOLUTION_BASE="true"

ONBUILD RUN echo "\e[31m0.Using $PROJECT_PATH  $SOLUTION_BASE \e[0m"

ONBUILD RUN  \
   if [ ! -z $DOTNET_VERSION ]; then \
      echo "\e[34m1.Using $DOTNET_VERSION\e[0m"; \
   else \
      echo "\e[34m1.Using Default TargetFramework(s) \e[0m"; \
   fi;

WORKDIR /app

# Copy helper scripts
COPY ./scripts/* /scripts/
RUN chmod +x /scripts/*.sh

# copy build dependecies
ONBUILD RUN echo "\e[34m2.Copying solution file\e[0m"
ONBUILD COPY ./*.sln ./

# copy project files
ONBUILD RUN echo "\e[34m3.Copying all source .csproj files\e[0m"
ONBUILD COPY src/*/*.csproj ./
ONBUILD RUN for file in $(ls *.csproj); do mkdir -p src/${file%.*}/ && mv $file src/${file%.*}/; done

ONBUILD RUN  \ 
   if [ $SOLUTION_BASE = "true" ]; then \
      echo "\e[34m4.Restoring ./*.sln\e[0m"; \
   else \
      echo "\e[34m4.Restoring Project: $PROJECT_PATH\e[0m"; \
   fi;
ONBUILD RUN /scripts/restore.sh $VERBOSE $SOLUTION_BASE $NUGET_RESTORE $PROJECT_PATH 

# build project
ONBUILD RUN echo "\e[34m5.Copy /src/ /src\e[0m"
ONBUILD COPY ./src ./src

ONBUILD RUN \
   if [ $SOLUTION_BASE = "true" ]; then \
         echo "\e[34m6. Build ./*.sln\e[0m"; \
         /scripts/build-sln.sh $VERBOSE $DOTNET_VERSION; \
   else \
         echo "\e[34m6. Build $PROJECT_PATH\e[0m"; \
         /scripts/build-proj.sh $VERBOSE $PROJECT_PATH $DOTNET_VERSION; \
   fi;
